#!/usr/bin/env python3
"""
–ö–ª–∏–µ–Ω—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ GET-–∑–∞–ø—Ä–æ—Å—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ query –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö
"""

import requests
import base64
import os
import sys
from pathlib import Path
import urllib.parse
import json
import time

class FileTransferClient:
    def __init__(self, server_url='http://193.222.99.46:8080'):
        self.server_url = server_url.rstrip('/')
        self.chunk_size = 1024 * 8  # 8KB chunks (—É—á–∏—Ç—ã–≤–∞—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è URL)
    
    def upload_file(self, file_path, show_progress=True):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä"""
        file_path = Path(file_path)
        
        if not file_path.exists():
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
            return False
        
        if not file_path.is_file():
            print(f"‚ùå –£–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ–∞–π–ª–æ–º: {file_path}")
            return False
        
        filename = file_path.name
        file_size = file_path.stat().st_size
        
        print(f"üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞: {filename}")
        print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
        
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∏ —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –∫—É—Å–∫–∏
        chunks = []
        with open(file_path, 'rb') as f:
            while True:
                chunk = f.read(self.chunk_size)
                if not chunk:
                    break
                chunks.append(chunk)
        
        total_chunks = len(chunks)
        print(f"üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É—Å–∫–æ–≤: {total_chunks}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫—É—Å–∫–∏
        for i, chunk in enumerate(chunks):
            if not self._send_chunk(filename, chunk, i, total_chunks, show_progress):
                return False
        
        print(f"‚úÖ –§–∞–π–ª {filename} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
        return True
    
    def _send_chunk(self, filename, chunk_data, chunk_index, total_chunks, show_progress=True):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –æ–¥–Ω–æ–≥–æ –∫—É—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö"""
        try:
            # –ö–æ–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ base64
            encoded_data = base64.b64encode(chunk_data).decode('utf-8')
            
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            params = {
                'filename': filename,
                'data': encoded_data,
                'chunk': str(chunk_index),
                'total': str(total_chunks),
                'final': 'true' if chunk_index == total_chunks - 1 else 'false'
            }
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
            url = f"{self.server_url}/upload"
            
            if show_progress:
                progress = ((chunk_index + 1) / total_chunks) * 100
                print(f"‚è≥ –û—Ç–ø—Ä–∞–≤–∫–∞ –∫—É—Å–∫–∞ {chunk_index + 1}/{total_chunks} ({progress:.1f}%)")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å
            response = requests.get(url, params=params, timeout=30)
            
            if response.status_code == 200:
                try:
                    result = response.json()
                    if show_progress and 'message' in result:
                        print(f"   {result['message']}")
                    return True
                except json.JSONDecodeError:
                    print(f"‚ö†Ô∏è  –ü–æ–ª—É—á–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –æ—Ç–≤–µ—Ç")
                    return True  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º, –≤–æ–∑–º–æ–∂–Ω–æ —Å–µ—Ä–≤–µ—Ä –ø—Ä–æ—Å—Ç–æ –≤–µ—Ä–Ω—É–ª —Ç–µ–∫—Å—Ç
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫—É—Å–∫–∞ {chunk_index + 1}: {response.status_code}")
                print(f"   {response.text}")
                return False
                
        except requests.exceptions.Timeout:
            print(f"‚è∞ –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫—É—Å–∫–∞ {chunk_index + 1}")
            return False
        except requests.exceptions.ConnectionError:
            print(f"üîå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫—É—Å–∫–∞ {chunk_index + 1}")
            return False
        except Exception as e:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫—É—Å–∫–∞ {chunk_index + 1}: {str(e)}")
            return False
    
    def get_server_status(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
        try:
            response = requests.get(f"{self.server_url}/status", timeout=10)
            if response.status_code == 200:
                return response.json()
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {response.status_code}")
                return None
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º: {str(e)}")
            return None
    
    def test_connection(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º"""
        print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å {self.server_url}")
        status = self.get_server_status()
        
        if status:
            print("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            print(f"üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞: {status.get('status', 'unknown')}")
            files = status.get('uploaded_files', [])
            if files:
                print(f"üìÅ –§–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ({len(files)}):")
                for file in files:
                    print(f"   - {file}")
            else:
                print("üìÅ –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø–æ–∫–∞ –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤")
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
            return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞"""
    if len(sys.argv) < 2:
        print("üöÄ File Transfer Client")
        print()
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print(f"  {sys.argv[0]} <–ø—É—Ç—å_–∫_—Ñ–∞–π–ª—É> [url_—Å–µ—Ä–≤–µ—Ä–∞]")
        print(f"  {sys.argv[0]} --status [url_—Å–µ—Ä–≤–µ—Ä–∞]")
        print(f"  {sys.argv[0]} --test [url_—Å–µ—Ä–≤–µ—Ä–∞]")
        print()
        print("–ü—Ä–∏–º–µ—Ä—ã:")
        print(f"  {sys.argv[0]} document.pdf")
        print(f"  {sys.argv[0]} image.jpg http://192.168.1.100:8080")
        print(f"  {sys.argv[0]} --status")
        print(f"  {sys.argv[0]} --test http://example.com:8080")
        return
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL —Å–µ—Ä–≤–µ—Ä–∞
    server_url = 'http://193.222.99.46:8080'
    if len(sys.argv) > 2:
        server_url = sys.argv[2]
    
    client = FileTransferClient(server_url)
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
    if sys.argv[1] == '--status':
        status = client.get_server_status()
        if status:
            print("üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞:")
            print(json.dumps(status, indent=2, ensure_ascii=False))
    
    elif sys.argv[1] == '--test':
        client.test_connection()
    
    else:
        # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
        file_path = sys.argv[1] || '/root/full-backup.tar.gz'
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        if not client.test_connection():
            print("‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º")
            return
        
        print()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
        start_time = time.time()
        success = client.upload_file(file_path)
        end_time = time.time()
        
        if success:
            duration = end_time - start_time
            print(f"‚è±Ô∏è  –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: {duration:.2f} —Å–µ–∫—É–Ω–¥")

if __name__ == '__main__':
    main()
